IMPORT PANDAS AS PD
IMPORT NUMPY AS NP
IMPORT MATPLOTLIB.PYPLOT AS PLT
IMPORT RANDOM AS RD
IMPORT OS
IMPORT SEABORN AS SNS
FROM MATPLOTLIB.COLORS IMPORT LISTEDCOLORMAP
IMPORT DATETIME
IMPORT TIME
FROM SCIPY IMPORT STATS
FROM SCIPY.CLUSTER.HIERARCHY IMPORT DENDROGRAM, LINKAGE
FROM SCIPY.CLUSTER IMPORT HIERARCHY
FROM SKLEARN_EXTRA.CLUSTER IMPORT KMEDOIDS
IMPORT MATPLOTLIB.PYPLOT AS PLT
FROM SKLEARN.DATASETS IMPORT MAKE_BLOBS
FROM SKLEARN.CLUSTER IMPORT KMEANS
FROM SKLEARN.DECOMPOSITION IMPORT PCA
FROM SKLEARN.METRICS IMPORT SILHOUETTE_SCORE, ADJUSTED_RAND_SCORE
FROM SKLEARN.PREPROCESSING IMPORT STANDARDSCALER, LABELENCODER, MINMAXSCALER
FROM SKLEARN.PIPELINE IMPORT PIPELINE
FROM SKLEARN.CLUSTER IMPORT DBSCAN, AGGLOMERATIVECLUSTERING
IMPORT WARNINGS 
WARNINGS.FILTERWARNINGS("IGNORE")
OS.CHDIR("C:\\USERS\\FILIP\\PYTHON\\PYTHON")
DF = PD.READ_CSV("CUSTOMER360INSIGHTS.CSV", SEP=",")
PRINT('COLUMNS:', DF.COLUMNS.TOLIST())
CIS_STLPCE = ['AGE', 'CREDITSCORE', 'MONTHLYINCOME', 'COST', 'PRICE', 'QUANTITY']
X = DF[CIS_STLPCE].COPY()
X.DROPNA(INPLACE=TRUE)
SCALER = STANDARDSCALER()
X_SCALED = SCALER.FIT_TRANSFORM(X)
PLT.FIGURE(FIGSIZE=(8, 6))
FOR I, COL IN ENUMERATE(CIS_STLPCE, 1):
    PLT.SUBPLOT(2, 3, I)
    SNS.BOXPLOT(Y=X[COL])
    PLT.TITLE('ROZLOŽENIE PRE ' + COL)
    PLT.YLABEL(COL)
PLT.TIGHT_LAYOUT()
PLT.SHOW()
PRINT (X_SCALED)
CS = []
FOR I IN RANGE(1, 11):
    KMEANS = KMEANS(N_CLUSTERS = I, INIT = 'K-MEANS++', MAX_ITER = 300, N_INIT = 10, RANDOM_STATE = 0)
    KMEANS.FIT(X_SCALED)
    CS.APPEND(KMEANS.INERTIA_)
PLT.PLOT(RANGE(1, 11), CS)
PLT.TITLE('LAKŤOVÁ METÓDA PRE URČENIE K')
PLT.XLABEL('POČET ZHLUKOV')
PLT.YLABEL('INERTIA')
OPTIMAL_K = 2
KMEANS = KMEANS(N_CLUSTERS=OPTIMAL_K, RANDOM_STATE=42)
CLUSTER_LABELS = KMEANS.FIT_PREDICT(X_SCALED)
DF_CLUSTERS = DF.COPY()
DF_CLUSTERS = DF_CLUSTERS.LOC[X.INDEX]  # ENSURE ALIGN WITH DROPPED ROWS
DF_CLUSTERS['CLUSTER'] = CLUSTER_LABELS
PRINT('K-MEANS CLUSTERING HEAD:')
PRINT(DF_CLUSTERS[['AGE', 'CREDITSCORE', 'MONTHLYINCOME', 'COST', 'PRICE', 'QUANTITY', 'CLUSTER']].HEAD())
START_TIME = TIME.TIME()
LINKED = LINKAGE(X_SCALED, METHOD='SINGLE')
PLT.FIGURE(FIGSIZE=(10, 5))
DENDROGRAM(LINKED, TRUNCATE_MODE='LEVEL', P=10)
PLT.TITLE('HIERARCHICKÉ ZHLUKOVANIE, METÓDA SINGLE')
PLT.XLABEL('INDEX VZORIEK')
PLT.YLABEL('VZDIALENOSTI')
PLT.SHOW()
PRINT("ČAS %S SEKUND " % (TIME.TIME() - START_TIME))
START_TIME = TIME.TIME()
LINKED = LINKAGE(X_SCALED, METHOD='COMPLETE')
PLT.FIGURE(FIGSIZE=(10, 5))
DENDROGRAM(LINKED, TRUNCATE_MODE='LEVEL', P=7)
PLT.TITLE('HIERARCHICKÉ ZHLUKOVANIE, METÓDA COMPLETE')
PLT.XLABEL('INDEX VZORIEK')
PLT.YLABEL('VZDIALENOSTI')
PLT.SHOW()
PRINT("ČAS %S SEKUND " % (TIME.TIME() - START_TIME))
START_TIME = TIME.TIME()
LINKED = LINKAGE(X_SCALED, METHOD='CENTROID')
PLT.FIGURE(FIGSIZE=(10, 5))
DENDROGRAM(LINKED, TRUNCATE_MODE='LEVEL', P=7)
PLT.TITLE('HIERARCHICKÉ ZHLUKOVANIE, METÓDA CENTROID')
PLT.XLABEL('INDEX VZORIEK')
PLT.YLABEL('VZDIALENOSTI')
PLT.SHOW()
PRINT("ČAS %S SEKUND " % (TIME.TIME() - START_TIME))
START_TIME = TIME.TIME()
LINKED = LINKAGE(X_SCALED, METHOD='WARD')
PLT.FIGURE(FIGSIZE=(10, 5))
DENDROGRAM(LINKED, TRUNCATE_MODE='LEVEL', P=5)
PLT.TITLE('HIERARCHICKÉ ZHLUKOVANIE, METÓDA WARD')
PLT.XLABEL('INDEX VZORIEK')
PLT.YLABEL('VZDIALENOSTI')
PLT.SHOW()
PRINT("ČAS %S SEKUND " % (TIME.TIME() - START_TIME))
HIER_CLUSTERS = FCLUSTER(LINKED, T=OPTIMAL_K, CRITERION='MAXCLUST')
DF_CLUSTERS['HIERCLUSTER'] = HIER_CLUSTERS
PRINT('HIERARCHICAL CLUSTERING HEAD:')
PRINT(DF_CLUSTERS[['AGE', 'CREDITSCORE', 'MONTHLYINCOME', 'COST', 'PRICE', 'QUANTITY', 'HIERCLUSTER']].HEAD())
PRINT (X_SCALED)
START_TIME = TIME.TIME()
PCA = PCA(N_COMPONENTS=2)
X_PCA = PCA.FIT_TRANSFORM(X_SCALED)
PLT.FIGURE(FIGSIZE=(12, 6))
PLT.SUBPLOT(1,2,1)
PLT.SCATTER(X_PCA[:,0], X_PCA[:,1], C=CLUSTER_LABELS, CMAP='CIVIDIS', S=25)
PLT.TITLE('GRAF ZA POUŽITIA K-MEANS METÓDY')
PLT.XLABEL('KOMPONENT 1')
PLT.YLABEL('KOMPONENT 2')
PLT.TIGHT_LAYOUT()
PLT.SHOW()
PRINT("ČAS %S SEKUND " % (TIME.TIME() - START_TIME))
FROM SKLEARN_EXTRA.CLUSTER IMPORT KMEDOIDS
KMEDOIDS = KMEDOIDS(N_CLUSTERS=2, RANDOM_STATE=42)
LABELS_KMEDOIDS = KMEDOIDS.FIT_PREDICT(X_SCALED)
DF['KMEDOIDSCLUSTER'] = LABELS_KMEDOIDS
START_TIME = TIME.TIME()
PLT.FIGURE(FIGSIZE=(8,6))
SNS.SCATTERPLOT(DATA=DF,X='AGE',Y='MONTHLYINCOME',HUE='KMEDOIDSCLUSTER', PALETTE='VIRIDIS', S=80)
PLT.TITLE('K-MEDOIDS METÓDA')
PLT.XLABEL('AGE')
PLT.YLABEL('MONTHLY INCOME')
PLT.LEGEND(TITLE='ZHLUKY')
PLT.SHOW()
PRINT("ČAS %S SEKUND " % (TIME.TIME() - START_TIME))
